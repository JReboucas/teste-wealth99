{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue","webpack:///./src/components/Content.vue","webpack:///./src/utils/geckoApi.js","webpack:///./src/utils/methods.js","webpack:///./src/utils/mockedData.js","webpack:///src/components/Content.vue","webpack:///./src/components/Content.vue?a03b","webpack:///./src/components/Content.vue?8271","webpack:///src/App.vue","webpack:///./src/App.vue?4c2e","webpack:///./src/App.vue?3746","webpack:///./src/plugins/vuetify.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_c","_self","staticClass","staticRenderFns","_vm","_v","attrs","_e","model","cripto","coin","currentTime","callback","$set","_s","series","render","geckoApi","axios","baseURL","formatPriceBasedOnCoin","price","coins","usd","Intl","NumberFormat","style","currency","maximumSignificantDigits","format","eur","brl","convertDateToMiliseconds","date","getTime","validateDateBasedOnCrypto","oldDate","cryptoLimitDate","bitcoin","ethereum","dacxi","cosmos","criptos","Date","disableFutureDates","today","mergeDateAndTime","time","getPastFutureRange","futureOrPast","timeState","future","past","returnOneMonthBefore","async","currentDate","oneMonthBefore","setMonth","getMonth","params","vs_currency","from","to","pricesArr","prices","pricesArr30","error","console","log","getCoinMarketChart","days","interval","getCoinCurrentPrice","_data$market_data$cur","market_data","current_price","getCurrentCoinPriceBasedOnDate","targetDate","ranges","pastDate","futureDate","timeStamps","current","closestPrice","reduce","prev","curr","Math","abs","mockedData","text","currentCoin","currentCripto","options","chart","id","xaxis","categories","responsive","breakpoint","width","height","legend","position","loading","hour","oldDateDisplay","priceTitle","filterButton","oldPrice","dateTime","progressValue","progressView","computed","priceCurrency","formatCurrency","setCriptoOrDateTime","setCripto","setDateTime","setDateTimeOrClearFilters","clearFilters","mounted","timerUpdate","updateChart","watch","methods","fullDate","gecko","dateResult","map","toFixed","datesArr","getDate","month","toLocaleUpperCase","yaxis","labels","formatter","$toast","setInterval","warning","day","toString","year","getFullYear","comparisonDate","updateChartBasedOnOldDate","component","components","Content","Vue","use","Vuetify","VueApexCharts","timeout","closeOnClick","pauseOnFocusLoss","pauseOnHover","draggable","draggablePercent","showCloseButtonOnHover","hideProgressBar","closeButton","icon","rtl","transition","maxToasts","newestOnTop","Toast","config","productionTip","vuetify","h","App","$mount"],"mappings":"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","file":"js/app.e6698bb7.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/teste-wealth99/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-app',[_c('div',{staticClass:\"bg-dacxi-white h-full\"},[_c('Content')],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 mt-4\"},[_vm._m(0),_c('div',{staticClass:\"bg-white shadow-lg rounded-lg p-6 flex flex-col md:flex-row\"},[_c('div',{staticClass:\"flex flex-col w-full md:w-1/2 lg:w-1/3 p-4\"},[_c('p',{staticClass:\"text-center text-sm\"},[_vm._v(\" \"+_vm._s(_vm.priceTitle)+\" \")]),(_vm.loading)?_c('div',{staticClass:\"flex justify-center mb-7\"},[_c('v-progress-circular',{attrs:{\"indeterminate\":\"\",\"color\":\"blue\",\"data-testid\":\"loading-spinner\"}})],1):_c('h1',{staticClass:\"text-center mb-5 text-h4 fade-in fade-out font-weight-bold text-dacxi-error\",attrs:{\"data-test-id\":\"price\"}},[_vm._v(\" \"+_vm._s(_vm.priceCurrency)+\" \")]),(_vm.progressView)?_c('div',{staticClass:\"flex justify-center align-center mb-10 fade-in fade-out\"},[_c('v-progress-linear',{attrs:{\"data-testid\":\"progress-bar\",\"value\":_vm.progressValue}})],1):_vm._e(),_c('v-select',{attrs:{\"items\":_vm.cripto.criptos,\"label\":\"Select your criptocurrency\",\"prepend-icon\":\"mdi-hand-coin\",\"outlined\":\"\",\"data-testid\":\"cripto-select\"},on:{\"change\":_vm.setCriptoOrDateTime},model:{value:(_vm.cripto.currentCripto),callback:function ($$v) {_vm.$set(_vm.cripto, \"currentCripto\", $$v)},expression:\"cripto.currentCripto\"}}),_c('v-select',{attrs:{\"items\":_vm.coin.coins,\"label\":\"Select your coin\",\"prepend-icon\":\"mdi-currency-usd\",\"outlined\":\"\",\"data-testid\":\"coin-select\"},on:{\"change\":_vm.setCriptoOrDateTime},model:{value:(_vm.coin.currentCoin),callback:function ($$v) {_vm.$set(_vm.coin, \"currentCoin\", $$v)},expression:\"coin.currentCoin\"}}),_c('h3',{staticClass:\"mb-4\"},[_vm._v(\"Filter price by specific date\")]),_c('v-text-field',{attrs:{\"outlined\":\"\",\"disabled\":!_vm.progressView,\"label\":\"Insert a date\",\"type\":\"date\",\"data-testid\":\"date-input\"},model:{value:(_vm.currentTime.date),callback:function ($$v) {_vm.$set(_vm.currentTime, \"date\", $$v)},expression:\"currentTime.date\"}}),_c('v-text-field',{attrs:{\"outlined\":\"\",\"disabled\":!_vm.progressView,\"label\":\"Insert an hour\",\"type\":\"time\",\"data-testid\":\"hour-input\"},model:{value:(_vm.currentTime.hour),callback:function ($$v) {_vm.$set(_vm.currentTime, \"hour\", $$v)},expression:\"currentTime.hour\"}}),_c('v-btn',{staticClass:\"text-capitalize\",attrs:{\"data-testid\":\"submit-date-button\"},on:{\"click\":_vm.setDateTimeOrClearFilters}},[_vm._v(_vm._s(_vm.filterButton))])],1),_c('div',{staticClass:\"w-full md:w-1/2 lg:w-2/3 mt-10 md:mt-0 p-4 border-2 border-gray-300 rounded-lg\"},[_c('div',{staticClass:\"flex justify-center mb-5 font-weight-bold fade-in fade-out\"},[_c('h3',{staticClass:\"text-base\"},[_c('span',{staticClass:\"text-capitalize\",attrs:{\"data-testid\":\"current-cripto-title\"}},[_vm._v(_vm._s(_vm.cripto.currentCripto))]),_vm._v(\" Graph History in \"),_c('span',{staticClass:\"text-uppercase text-dacxi-success\",attrs:{\"data-testid\":\"current-coin-title\"}},[_vm._v(_vm._s(_vm.coin.currentCoin))]),(_vm.oldDateDisplay)?_c('span',{staticClass:\"ml-1\"},[_vm._v(\"at \"+_vm._s(_vm.oldDateDisplay || ''))]):_vm._e()])]),_c('div',[_c('apexchart',{staticClass:\"fade-in fade-out\",attrs:{\"width\":\"100%\",\"type\":\"area\",\"options\":_vm.options,\"series\":_vm.series,\"data-testid\":\"dacxi-apex-chart\"}})],1)])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"bg-white shadow overflow-hidden sm:rounded-lg p-6 mb-6\"},[_c('h2',{staticClass:\"text-lg leading-6 font-medium text-gray-900\"},[_vm._v(\"Últimas Notícias\")]),_c('div',{staticClass:\"mt-2 grid grid-cols-1 md:grid-cols-3 gap-4\"},[_c('div',{staticClass:\"p-4 border border-gray-200 rounded-lg\"},[_c('h3',{staticClass:\"font-semibold text-gray-800\"},[_vm._v(\"DACXI e Bitcoin atingem novos recordes\")]),_c('p',{staticClass:\"text-sm text-gray-600\"},[_vm._v(\"Os preços da DACXI e Bitcoin continuam sua ascensão...\")])]),_c('div',{staticClass:\"p-4 border border-gray-200 rounded-lg\"},[_c('h3',{staticClass:\"font-semibold text-gray-800\"},[_vm._v(\"Investidores de olho na DACXI\")]),_c('p',{staticClass:\"text-sm text-gray-600\"},[_vm._v(\"Novos investimentos estão sendo direcionados para DACXI...\")])]),_c('div',{staticClass:\"p-4 border border-gray-200 rounded-lg\"},[_c('h3',{staticClass:\"font-semibold text-gray-800\"},[_vm._v(\"O futuro do Bitcoin\")]),_c('p',{staticClass:\"text-sm text-gray-600\"},[_vm._v(\"Especialistas preveem um futuro brilhante para o Bitcoin...\")])])])])\n}]\n\nexport { render, staticRenderFns }","import axios from 'axios'\r\n\r\nconst geckoApi = axios.create({\r\n    baseURL: 'https://api.coingecko.com/api/v3',\r\n})\r\n\r\nexport default geckoApi\r\n","import geckoApi from './geckoApi'\r\n\r\nexport const formatPriceBasedOnCoin = (price, coin) => {\r\n    // ** Hashmap to format price based on coin selected by the user **\r\n    const coins = {\r\n        usd: new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n            maximumSignificantDigits: 3,\r\n        }).format(price),\r\n        eur: new Intl.NumberFormat('de-DE', {\r\n            style: 'currency',\r\n            currency: 'EUR',\r\n            maximumSignificantDigits: 3,\r\n        }).format(price),\r\n        brl: new Intl.NumberFormat('pt-BR', {\r\n            style: 'currency',\r\n            currency: 'BRL',\r\n            maximumSignificantDigits: 3,\r\n        }).format(price),\r\n    }\r\n    return coins[coin]\r\n}\r\n\r\nexport const convertDateToMiliseconds = (date) => {\r\n    // ** TimeStamp conversion **\r\n    return date.getTime() / 1000\r\n}\r\n\r\nexport const validateDateBasedOnCrypto = (cripto, oldDate) => {\r\n    // ** Current API has date limitations, so I validated the date limit of each crypto by hashmap **\r\n    const cryptoLimitDate = {\r\n        bitcoin: 1367323200,\r\n        ethereum: 1438947200,\r\n        'terra-luna': 1559217600,\r\n        dacxi: 1625140800,\r\n        cosmos: 1551441600,\r\n    }\r\n    const criptos = {\r\n        bitcoin:\r\n            convertDateToMiliseconds(oldDate) < cryptoLimitDate[cripto]\r\n                ? new Date(cryptoLimitDate[cripto] * 1000)\r\n                : oldDate,\r\n        ethereum:\r\n            convertDateToMiliseconds(oldDate) < cryptoLimitDate[cripto]\r\n                ? new Date(cryptoLimitDate[cripto] * 1000)\r\n                : oldDate,\r\n        'terra-luna':\r\n            convertDateToMiliseconds(oldDate) < cryptoLimitDate[cripto]\r\n                ? new Date(cryptoLimitDate[cripto] * 1000)\r\n                : oldDate,\r\n        dacxi:\r\n            convertDateToMiliseconds(oldDate) < cryptoLimitDate[cripto]\r\n                ? new Date(cryptoLimitDate[cripto] * 1000)\r\n                : oldDate,\r\n        cosmos:\r\n            convertDateToMiliseconds(oldDate) < cryptoLimitDate[cripto]\r\n                ? new Date(cryptoLimitDate[cripto] * 1000)\r\n                : oldDate,\r\n    }\r\n    return criptos[cripto]\r\n}\r\n\r\nexport const disableFutureDates = (date) => {\r\n    const today = new Date()\r\n    return date > today\r\n}\r\n\r\nexport const mergeDateAndTime = (date, time) => {\r\n    return new Date(date + ' ' + time)\r\n}\r\n\r\nexport const getPastFutureRange = (date, futureOrPast) => {\r\n    // ** Function used to get the past and future range of the date selected by the user **\r\n    const timeState = {\r\n        future: new Date(date.getTime() + 300 * 300 * 1000),\r\n        past: new Date(date.getTime() - 300 * 300 * 1000),\r\n    }\r\n    return timeState[futureOrPast]\r\n}\r\n\r\nexport const returnOneMonthBefore = async (cripto, coin, date) => {\r\n    const currentDate = convertDateToMiliseconds(date)\r\n    const oneMonthBefore = convertDateToMiliseconds(\r\n        new Date(date.setMonth(date.getMonth() - 1))\r\n    )\r\n    try {\r\n        const { data } = await geckoApi.get(\r\n            `/coins/${cripto}/market_chart/range?`,\r\n            {\r\n                params: {\r\n                    vs_currency: coin,\r\n                    from: oneMonthBefore,\r\n                    to: currentDate,\r\n                },\r\n            }\r\n        )\r\n        const pricesArr = data.prices\r\n        const pricesArr30 = pricesArr.slice(pricesArr.length - 30)\r\n        return pricesArr30\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const getCoinMarketChart = async (cripto, coin, days = 30) => {\r\n    try {\r\n        const { data } = await geckoApi.get(`/coins/${cripto}/market_chart?`, {\r\n            params: {\r\n                vs_currency: coin,\r\n                days,\r\n                interval: 'daily',\r\n            },\r\n        })\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const getCoinCurrentPrice = async (cripto, coin) => {\r\n    try {\r\n        const { data } = await geckoApi.get(`/coins/${cripto}`)\r\n        return data?.market_data.current_price?.[coin]\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const getCurrentCoinPriceBasedOnDate = async (\r\n    cripto,\r\n    coin,\r\n    targetDate\r\n) => {\r\n    const ranges = {\r\n        pastDate: getPastFutureRange(targetDate, 'past'),\r\n        futureDate: getPastFutureRange(targetDate, 'future'),\r\n    }\r\n    const timeStamps = {\r\n        from: convertDateToMiliseconds(ranges.pastDate),\r\n        to: convertDateToMiliseconds(ranges.futureDate),\r\n        current: convertDateToMiliseconds(targetDate),\r\n    }\r\n    try {\r\n        const { data } = await geckoApi.get(\r\n            `/coins/${cripto}/market_chart/range?`,\r\n            {\r\n                params: {\r\n                    vs_currency: coin,\r\n                    from: timeStamps.from,\r\n                    to: timeStamps.to,\r\n                },\r\n            }\r\n        )\r\n        const closestPrice = data.prices.reduce((prev, curr) => {\r\n            return Math.abs(curr[0] - timeStamps.current) <\r\n                Math.abs(prev[0] - timeStamps.current)\r\n                ? curr\r\n                : prev\r\n        })\r\n        return closestPrice\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n","export const mockedData = [\r\n    {\r\n        coins: [\r\n            {\r\n                text: 'USD',\r\n                value: 'usd',\r\n            },\r\n            {\r\n                text: 'EUR',\r\n                value: 'eur',\r\n            },\r\n            {\r\n                text: 'BRL',\r\n                value: 'brl',\r\n            },\r\n        ],\r\n        currentCoin: 'usd',\r\n    },\r\n    {\r\n        criptos: [\r\n            {\r\n                text: 'Ethereum',\r\n                value: 'ethereum',\r\n            },\r\n            {\r\n                text: 'Bitcoin',\r\n                value: 'bitcoin',\r\n            },\r\n            {\r\n                text: 'Luna',\r\n                value: 'terra-luna',\r\n            },\r\n            {\r\n                text: 'Dacxi',\r\n                value: 'dacxi',\r\n            },\r\n            {\r\n                text: 'ATOM',\r\n                value: 'cosmos',\r\n            },\r\n        ],\r\n        currentCripto: 'bitcoin',\r\n    },\r\n    {\r\n        options: {\r\n            chart: {\r\n                id: 'dacxi-cripto-chart',\r\n            },\r\n            xaxis: {\r\n                categories: [],\r\n            },\r\n            responsive: [\r\n                {\r\n                    breakpoint: 600,\r\n                    options: {\r\n                        chart: {\r\n                            width: 350,\r\n                            height: 400,\r\n                        },\r\n                        legend: {\r\n                            position: 'bottom',\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    },\r\n]\r\n","<template>\r\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 mt-4\">\r\n        <!-- Card de Notícias -->\r\n        <div class=\"bg-white shadow overflow-hidden sm:rounded-lg p-6 mb-6\">\r\n            <h2 class=\"text-lg leading-6 font-medium text-gray-900\">Últimas Notícias</h2>\r\n            <div class=\"mt-2 grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <div class=\"p-4 border border-gray-200 rounded-lg\">\r\n                    <h3 class=\"font-semibold text-gray-800\">DACXI e Bitcoin atingem novos recordes</h3>\r\n                    <p class=\"text-sm text-gray-600\">Os preços da DACXI e Bitcoin continuam sua ascensão...</p>\r\n                </div>\r\n                <div class=\"p-4 border border-gray-200 rounded-lg\">\r\n                    <h3 class=\"font-semibold text-gray-800\">Investidores de olho na DACXI</h3>\r\n                    <p class=\"text-sm text-gray-600\">Novos investimentos estão sendo direcionados para DACXI...</p>\r\n                </div>\r\n                <div class=\"p-4 border border-gray-200 rounded-lg\">\r\n                    <h3 class=\"font-semibold text-gray-800\">O futuro do Bitcoin</h3>\r\n                    <p class=\"text-sm text-gray-600\">Especialistas preveem um futuro brilhante para o Bitcoin...</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!--panel-->\r\n        <div class=\"bg-white shadow-lg rounded-lg p-6 flex flex-col md:flex-row\">\r\n            <div class=\"flex flex-col w-full md:w-1/2 lg:w-1/3 p-4\">\r\n                <p class=\"text-center text-sm\">\r\n                    {{ priceTitle }}\r\n                </p>\r\n                <div v-if=\"loading\" class=\"flex justify-center mb-7\">\r\n                    <v-progress-circular indeterminate color=\"blue\" data-testid=\"loading-spinner\"></v-progress-circular>\r\n                </div>\r\n                <h1 v-else class=\"text-center mb-5 text-h4 fade-in fade-out font-weight-bold text-dacxi-error\"\r\n                    data-test-id=\"price\">\r\n                    {{ priceCurrency }}\r\n                </h1>\r\n                <div v-if=\"progressView\" class=\"flex justify-center align-center mb-10 fade-in fade-out\">\r\n                    <v-progress-linear data-testid=\"progress-bar\" :value=\"progressValue\"></v-progress-linear>\r\n                </div>\r\n                <v-select :items=\"cripto.criptos\" label=\"Select your criptocurrency\" v-model=\"cripto.currentCripto\"\r\n                    @change=\"setCriptoOrDateTime\" prepend-icon=\"mdi-hand-coin\" outlined\r\n                    data-testid=\"cripto-select\"></v-select>\r\n                <v-select :items=\"coin.coins\" label=\"Select your coin\" v-model=\"coin.currentCoin\"\r\n                    @change=\"setCriptoOrDateTime\" prepend-icon=\"mdi-currency-usd\" outlined\r\n                    data-testid=\"coin-select\"></v-select>\r\n                <h3 class=\"mb-4\">Filter price by specific date</h3>\r\n                <v-text-field outlined :disabled=\"!progressView\" label=\"Insert a date\" type=\"date\"\r\n                    v-model=\"currentTime.date\" data-testid=\"date-input\" />\r\n                <v-text-field outlined :disabled=\"!progressView\" label=\"Insert an hour\" type=\"time\"\r\n                    v-model=\"currentTime.hour\" data-testid=\"hour-input\" />\r\n                <v-btn class=\"text-capitalize\" data-testid=\"submit-date-button\" @click=\"setDateTimeOrClearFilters\">{{\r\n                    filterButton }}</v-btn>\r\n            </div>\r\n\r\n            <!--grafico-->\r\n            <div class=\"w-full md:w-1/2 lg:w-2/3 mt-10 md:mt-0 p-4 border-2 border-gray-300 rounded-lg\">\r\n                <div class=\"flex justify-center mb-5 font-weight-bold fade-in fade-out\">\r\n                    <h3 class=\"text-base\">\r\n                        <span class=\"text-capitalize\" data-testid=\"current-cripto-title\">{{ cripto.currentCripto\r\n                            }}</span>\r\n                        Graph History in\r\n                        <span class=\"text-uppercase text-dacxi-success\" data-testid=\"current-coin-title\">{{\r\n                            coin.currentCoin\r\n                        }}</span>\r\n                        <span v-if=\"oldDateDisplay\" class=\"ml-1\">at {{ oldDateDisplay || '' }}</span>\r\n                    </h3>\r\n                </div>\r\n                <div>\r\n                    <apexchart width=\"100%\" type=\"area\" :options=\"options\" :series=\"series\" class=\"fade-in fade-out\"\r\n                        data-testid=\"dacxi-apex-chart\"></apexchart>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as gecko from '../utils/methods'\r\nimport { mockedData } from '../utils/mockedData'\r\n\r\nexport default {\r\n    name: 'Content',\r\n    data: () => ({\r\n        loading: false,\r\n        currentTime: {\r\n            date: '',\r\n            hour: '',\r\n        },\r\n        oldDateDisplay: '',\r\n        priceTitle: 'Current price',\r\n        filterButton: 'Filter',\r\n        price: '',\r\n        oldPrice: '',\r\n        dateTime: '',\r\n        progressValue: 0,\r\n        progressView: true,\r\n        coin: mockedData[0],\r\n        cripto: mockedData[1],\r\n        options: mockedData[2].options,\r\n        series: mockedData[2].series,\r\n    }),\r\n    computed: {\r\n        priceCurrency() {\r\n            return this.progressView\r\n                ? this.formatCurrency(this.price, this.coin.currentCoin)\r\n                : this.formatCurrency(this.oldPrice, this.coin.currentCoin)\r\n        },\r\n        setCriptoOrDateTime() {\r\n            return this.progressView ? this.setCripto : this.setDateTime\r\n        },\r\n        setDateTimeOrClearFilters() {\r\n            return this.progressView ? this.setDateTime : this.clearFilters\r\n        },\r\n    },\r\n    mounted() {\r\n        this.setCripto()\r\n        this.timerUpdate()\r\n        this.updateChart()\r\n    },\r\n    watch: {\r\n        price() {\r\n            this.updateChart()\r\n            this.progressValue = 0\r\n        },\r\n        progressValue() {\r\n            // ** Restarts progress bar value when it reaches 100% **\r\n            if (this.progressValue === 100) {\r\n                this.progressValue = 0\r\n                this.setCripto()\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        async updateChartBasedOnOldDate() {\r\n            try {\r\n                const fullDate = gecko.mergeDateAndTime(\r\n                    this.currentTime.date,\r\n                    this.currentTime.hour\r\n                )\r\n                const dateResult = gecko.validateDateBasedOnCrypto(\r\n                    this.cripto.currentCripto,\r\n                    fullDate\r\n                )\r\n                const result = await gecko.returnOneMonthBefore(\r\n                    this.cripto.currentCripto,\r\n                    this.coin.currentCoin,\r\n                    dateResult\r\n                )\r\n                const pricesArr = result.map((price) => price[1].toFixed(4))\r\n                const datesArr = result.map((price) => {\r\n                    const fullDate = new Date(price[0])\r\n                    const date = fullDate.getDate()\r\n                    const month = fullDate.getMonth() + 1\r\n                    return `${date}/${month}`\r\n                })\r\n                this.series = [\r\n                    {\r\n                        data: pricesArr,\r\n                        name: this.cripto.currentCripto.toLocaleUpperCase(),\r\n                    },\r\n                ]\r\n                this.options = {\r\n                    xaxis: {\r\n                        categories: datesArr,\r\n                    },\r\n                    yaxis: {\r\n                        labels: {\r\n                            formatter: (value) =>\r\n                                this.formatCurrency(\r\n                                    value,\r\n                                    this.coin.currentCoin\r\n                                ),\r\n                        },\r\n                    },\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        },\r\n        async updateChart() {\r\n            try {\r\n                const { prices } = await gecko.getCoinMarketChart(\r\n                    this.cripto.currentCripto,\r\n                    this.coin.currentCoin\r\n                )\r\n                const pricesArr = prices.map((price) => price[1].toFixed(4))\r\n                const datesArr = prices.map((price) => {\r\n                    const fullDate = new Date(price[0])\r\n                    const date = fullDate.getDate()\r\n                    const month = fullDate.getMonth() + 1\r\n                    return `${date}/${month}`\r\n                })\r\n                this.series = [\r\n                    {\r\n                        data: pricesArr,\r\n                        name: this.cripto.currentCripto.toLocaleUpperCase(),\r\n                    },\r\n                ]\r\n                this.options = {\r\n                    xaxis: {\r\n                        categories: datesArr,\r\n                    },\r\n                    yaxis: {\r\n                        labels: {\r\n                            formatter: (value) =>\r\n                                this.formatCurrency(\r\n                                    value,\r\n                                    this.coin.currentCoin\r\n                                ),\r\n                        },\r\n                    },\r\n                }\r\n            } catch (error) {\r\n                this.$toast.error(\r\n                    'Error getting data, possible API error. Visit https://www.coingecko.com/en/api for more info'\r\n                )\r\n            }\r\n        },\r\n        async setCripto() {\r\n            this.loading = true\r\n            try {\r\n                this.price =\r\n                    (await gecko.getCoinCurrentPrice(\r\n                        this.cripto.currentCripto,\r\n                        this.coin.currentCoin\r\n                    )) || 0\r\n                this.loading = false\r\n            } catch (error) {\r\n                this.loading = false\r\n                this.$toast.error(\r\n                    'Error getting data, possible API error. Visit https://www.coingecko.com/en/api for more info'\r\n                )\r\n            }\r\n        },\r\n        timerUpdate() {\r\n            setInterval(() => {\r\n                if (!this.progressView) return\r\n                this.progressValue += 1\r\n            }, 100)\r\n        },\r\n        formatCurrency(value, coin) {\r\n            return gecko.formatPriceBasedOnCoin(value, coin)\r\n        },\r\n        async setDateTime() {\r\n            try {\r\n                // ** Empty validation **\r\n                if (\r\n                    this.currentTime.date === '' ||\r\n                    this.currentTime.hour === ''\r\n                ) {\r\n                    this.$toast.warning('Please select a date and hour')\r\n                    return\r\n                }\r\n                const fullDate = gecko.mergeDateAndTime(\r\n                    this.currentTime.date,\r\n                    this.currentTime.hour\r\n                )\r\n                if (gecko.disableFutureDates(fullDate)) {\r\n                    this.$toast.warning(\"You can't select a future date\")\r\n                    return\r\n                }\r\n                this.progressView = false\r\n                this.loading = true\r\n                const dateResult = gecko.validateDateBasedOnCrypto(\r\n                    this.cripto.currentCripto,\r\n                    fullDate\r\n                )\r\n                let day = dateResult.getDate().toString()\r\n                let month = dateResult.getMonth() + 1\r\n                month = month.toString()\r\n                if (month.length === 1) month = '0' + month\r\n                if (day.length === 1) day = '0' + day\r\n                const year = dateResult.getFullYear()\r\n                const comparisonDate = `${year}-${month}-${day}`\r\n\r\n                // ** Warning message for oldest available date **\r\n                if (comparisonDate !== this.currentTime.date) {\r\n                    this.$toast.warning(\r\n                        'Oldest date available for this crypto is ' +\r\n                        `${day}/${month}/${year}`\r\n                    )\r\n                    // ** If the date limit is returned, it sets the date to the oldest available **\r\n                    this.currentTime.date = comparisonDate\r\n                }\r\n                const result = await gecko.getCurrentCoinPriceBasedOnDate(\r\n                    this.cripto.currentCripto,\r\n                    this.coin.currentCoin,\r\n                    dateResult\r\n                )\r\n                this.updateChartBasedOnOldDate()\r\n                this.oldPrice = result[1]\r\n                this.priceTitle = 'Closest available price'\r\n                this.filterButton = 'Clear filters'\r\n                this.oldDateDisplay = `${day}/${month}/${year}`\r\n                this.loading = false\r\n            } catch (error) {\r\n                this.loading = false\r\n                this.$toast.error(\r\n                    'Error getting data, possible API error. Visit https://www.coingecko.com/en/api for more info'\r\n                )\r\n            }\r\n        },\r\n        clearFilters() {\r\n            this.progressView = true\r\n            this.priceTitle = 'Current price'\r\n            this.filterButton = 'Filter'\r\n            this.currentTime.date = ''\r\n            this.currentTime.hour = ''\r\n            this.oldDateDisplay = ''\r\n            this.setCripto()\r\n            this.updateChart()\r\n        },\r\n    },\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Content.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Content.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Content.vue?vue&type=template&id=aa58f9d0\"\nimport script from \"./Content.vue?vue&type=script&lang=js\"\nexport * from \"./Content.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <v-app>\r\n        <div class=\"bg-dacxi-white h-full\">\r\n            <Content></Content>\r\n        </div>\r\n    </v-app>\r\n</template>\r\n\r\n<script>\r\nimport Content from './components/Content.vue'\r\n\r\nexport default {\r\n    name: 'App',\r\n    components: {\r\n        Content,\r\n    },\r\n}\r\n</script>\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=38633ba4\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\r\nimport Vuetify from 'vuetify/lib/framework';\r\n\r\nVue.use(Vuetify);\r\n\r\nexport default new Vuetify({\r\n});\r\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport vuetify from './plugins/vuetify'\r\nimport './assets/main.css'\r\nimport Toast from 'vue-toastification'\r\nimport 'vue-toastification/dist/index.css'\r\nimport VueApexCharts from 'vue-apexcharts'\r\n\r\nVue.use(VueApexCharts)\r\n\r\nVue.component('apexchart', VueApexCharts)\r\n\r\nconst options = {\r\n    position: 'top-center',\r\n    timeout: 5000,\r\n    closeOnClick: true,\r\n    pauseOnFocusLoss: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    draggablePercent: 0.6,\r\n    showCloseButtonOnHover: false,\r\n    hideProgressBar: true,\r\n    closeButton: 'button',\r\n    icon: true,\r\n    rtl: false,\r\n    transition: 'Vue-Toastification__fade',\r\n    maxToasts: 20,\r\n    newestOnTop: true,\r\n}\r\n\r\nVue.use(Toast, options)\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n    vuetify,\r\n    render: (h) => h(App),\r\n}).$mount('#app')\r\n"],"sourceRoot":""}